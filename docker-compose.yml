
services:

  backend:
    build: ./backend
    container_name: backend
    depends_on:
      db:
        condition: service_healthy

      mqtt-broker:
        condition: service_healthy

    env_file:
      - ./.env  # Use this instead of specifying each variable
    ports:
      - "8000:8000"

    networks:
      - app-network

     # Add these lines for proper logging
    tty: true
    stdin_open: true


  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      - REACT_APP_WEBSOCKETS_PORT=${REACT_APP_WEBSOCKETS_PORT}
      - REACT_APP_WEBSOCKETS_HOST=${REACT_APP_WEBSOCKETS_HOST}
      - REACT_APP_MQTT_HOST=${REACT_APP_MQTT_HOST}
      - REACT_APP_MQTT_PORT=${REACT_APP_MQTT_PORT}
      - REACT_APP_MQTT_TOPIC=${MQTT_TOPIC}
      - REACT_APP_MQTT_USERNAME=${MQTT_FRONTEND_USER}
      - REACT_APP_MQTT_PASSWORD=${MQTT_FRONTEND_PASSWORD}

    ports:
      - "3000:3000"
    networks:
      - app-network

  db:
    container_name: db
    image: postgres:17
    environment:
        
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}

    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    networks:
      - app-network

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:  # This should be a separate service, not inside the db service
    image: adminer
    container_name: adminer
    restart: always
    networks:
      - app-network
    ports:
      - "8080:8080"
    depends_on:
      - db

  mqtt-broker:
    image: eclipse-mosquitto:2.0.21
    container_name: mqtt-broker
    ports:
    #   - "1883:1883"
      - "9001:9001"  # WebSockets

    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/config/pwfile:/mosquitto/config/pwfile
      - ./mosquitto/data/:/mosquitto/data/
      - ./mosquitto/log:/mosquitto/log
    networks:
      - app-network

    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t test -m test || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: